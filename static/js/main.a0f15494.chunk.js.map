{"version":3,"sources":["shared/enums/PageLocation.ts","themeConfiguration.tsx","Feature/Home/HomeContext.ts","Feature/Home/Components/HomeItem.tsx","Feature/Home/Components/About.tsx","Feature/Home/Components/Initial.tsx","Feature/SolarSystem/Components/SelectPlanets.tsx","shared/baseService.ts","Services/PlanetService.ts","Feature/SolarSystem/Components/PageHeader.tsx","shared/Components/DateCalendar.tsx","Feature/SolarSystem/Components/InitialDate.tsx","Feature/SolarSystem/Components/SimulationDays.tsx","Services/SimulationService.ts","Feature/SolarSystem/View/SolarSystem.tsx","Feature/SimulationResult/Components/PlotConfig.tsx","shared/operators.ts","Feature/SimulationResult/Components/PlotResult.tsx","Feature/SimulationResult/View/SimulationResult.tsx","assets/SolarSystem.svg","Feature/Sidebar/Components/DrawerHeader.tsx","Feature/Sidebar/Components/ListComponent.tsx","Feature/Sidebar/Components/MenuItemComponent.tsx","Feature/Sidebar/Components/DrawerItensList.tsx","Feature/Sidebar/Components/DrawerConfiguration.tsx","Feature/Sidebar/View/Sidebar.tsx","shared/Components/LoadingDialog.tsx","Feature/Home/Home.tsx","Routes.tsx","shared/AxiosSettings.ts","App.tsx","index.tsx"],"names":["PageLocation","themeConfiguration","createMuiTheme","palette","mode","primary","main","secondary","common","black","white","grey","background","default","typography","fontFamily","h1","fontWeight","fontSize","lineHeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","homeContextInitial","pageLocation","INITAL","setPageLocation","openLoadingDialog","setOpenLoadingDialog","simulationResult","setSimulationResult","HomeContext","React","createContext","HomeItem","pageLocationList","children","homeContext","useContext","includes","About","Grid","container","direction","justifyContent","alignItems","spacing","style","minHeight","item","xs","Button","fullWidth","variant","color","size","textTransform","height","onClick","Initial","ChooseButton","label","disabled","PageHeader","Typography","width","textAlign","SOLAR_SYSTEM","MANOUVERS","SelectPlanets","planets","planetsSelected","setPlanetsSelected","icon","checkedIcon","useEffect","length","setSunSelected","listPlanetsSelected","findIndex","p","name","sun","find","push","Autocomplete","multiple","options","value","onChange","_","newValue","filter","getOptionLabel","option","namePTBR","renderOption","props","selected","Checkbox","marginRight","checked","renderTags","tagValue","getTagProps","map","index","Chip","key","renderInput","params","TextField","route","create","data","axios","post","update","put","id","getAll","get","remove","delete","baseService","DateCalendar","dateTime","setDateTime","LocalizationProvider","dateAdapter","AdapterDateFns","locale","ptBR","DatePicker","disableFuture","InitialDate","dateValue","setDateValue","SimulationDays","simulationDays","setSimulationDays","type","InputLabelProps","shrink","e","Number","target","SolarSystem","useState","loading","setLoading","setPlanets","Date","fetchPlanets","PlanetService","then","response","catch","error","console","log","alert","finally","startSimulation","simulationConfig","initialDay","SimulationService","SIMULATION_RESULT","SimulationButton","LinearProgress","PlotConfig","tridimensionalPlot","setTridimensionalPlot","Paper","padding","Divider","minWidth","getWindowDimensions","window","innerWidth","innerHeight","PlotResult","plotData","setPlotData","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setPlanetsData","planet","getPlanetData","x","bodyTrajectory","y","z","sm","layout","title","autosize","hovermode","dragmode","xaxis","scaleratio","text","yaxis","scaleanchor","margin","display","flexDirection","config","displaylogo","SimulationResult","hasResult","DrawerHeader","setOpened","IconButton","borderRadius","marginBottom","src","alt","ListComponent","List","component","maxWidth","MenuItemComponent","menuTitle","backgroundColor","setBackgroundColor","changeBackgroundColor","onMouseOver","light","onMouseLeave","ListItem","justifyItems","verticalAlign","DrawerItensList","maxHeight","overflowY","DrawerConfiguration","ABOUT","Sidebar","opened","Drawer","anchor","PaperProps","elevation","open","overflow","LoadingDialog","Dialog","boxShadow","CircularProgress","Home","openDrawer","setOpenDrawer","flexGrow","Provider","edge","position","marginLeft","Routes","PrivateRoute","rest","render","exact","path","AxiosSetting","App","ThemeProvider","theme","CssBaseline","defaults","baseURL","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f15494.chunk.js","sourcesContent":["export enum PageLocation {\r\n    NONE = 0,\r\n    ABOUT,\r\n    INITAL,\r\n    WELCOME,\r\n    SOLAR_SYSTEM,\r\n    MANOUVERS,\r\n    SIMULATION_RESULT,\r\n}","import { createMuiTheme } from '@mui/material';\r\n\r\nexport const themeConfiguration = createMuiTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            main: '#5e35b1',\r\n        },\r\n        secondary: {\r\n            main: '#00acc1',\r\n        },\r\n        // success: {\r\n        //     light: '#E0FBC8',\r\n        //     main: '#59D134',\r\n        //     dark: '#1DB300',\r\n        // },\r\n        // error: {\r\n        //     light: '#FDDCD5',\r\n        //     main: '#E95F6D',\r\n        //     dark: '#BC214E',\r\n        // },\r\n        // warning: {\r\n        //     light: '#FFE9CC',\r\n        //     main: '#ffa800',\r\n        //     dark: '#FF4D00',\r\n        // },\r\n        // text: {\r\n        //     primary: '#fff',\r\n        //     secondary: '#424242',\r\n        //     disabled: '#B6B6B6',\r\n        // },\r\n        common: {\r\n            black: '#0E0E0E',\r\n            white: '#FFFFFF',\r\n        },\r\n        grey: {\r\n            50: '#FAFAFA',\r\n            200: '#E6E6E6',\r\n            500: '#B6B6B6',\r\n            700: '#6E6E6E',\r\n            900: '#424242',\r\n        },\r\n        background: {\r\n            default: '#121212',\r\n        },\r\n    },\r\n    typography : { \r\n        fontFamily: 'Roboto',\r\n        h1 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '6rem',\r\n            lineHeight: '7rem',\r\n            letterSpacing: '0rem'\r\n        },\r\n        h2 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '3.75rem',\r\n            lineHeight: '4.5rem',\r\n            letterSpacing: '0rem'\r\n        },\r\n        h3 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '3rem',\r\n            lineHeight: '3.5rem',\r\n            letterSpacing: '0rem'\r\n        },\r\n        h4 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '2.125rem',\r\n            lineHeight: '2.25rem',\r\n            letterSpacing: '0rem'\r\n        },\r\n        h5 : { \r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '1.5rem',\r\n            lineHeight: '1.5rem',\r\n            letterSpacing: '0rem'\r\n        },\r\n        h6 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '1.25rem',\r\n            lineHeight: '1.5rem',\r\n            letterSpacing: '0rem'\r\n        },\r\n        subtitle1 : { \r\n            fontFamily: 'Roboto',\r\n            fontWeight: 600, \r\n            fontSize: '1rem',\r\n            lineHeight: '1.5rem',\r\n            letterSpacing: '0.02rem'\r\n        },\r\n        subtitle2 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 400, \r\n            fontSize: '0.875rem',\r\n            lineHeight: '1.5rem',\r\n            letterSpacing: '0.02rem'\r\n        },\r\n        body1 : { \r\n            fontFamily: 'Roboto',\r\n            fontWeight: 400, \r\n            fontSize: '1rem',\r\n            lineHeight: '1.5rem',\r\n            letterSpacing: '0.02rem'\r\n        },\r\n        body2 : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 400, \r\n            fontSize: '0.875rem',\r\n            lineHeight: '1.25rem',\r\n            letterSpacing: '0.02rem'\r\n        },\r\n        button : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 600, \r\n            fontSize: '1rem',\r\n            lineHeight: '1rem',\r\n            letterSpacing: '0.08rem'\r\n        },\r\n        caption : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 400, \r\n            fontSize: '0.75rem',\r\n            lineHeight: '1rem',\r\n            letterSpacing: '0.025rem'\r\n        },\r\n        overline : {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700, \r\n            fontSize: '0.625rem',\r\n            lineHeight: '1rem',\r\n            letterSpacing: '0.1rem'\r\n        }\r\n    },\r\n    // overrides: {\r\n    //     MuiOutlinedInput: {\r\n    //         root: {\r\n    //             borderRadius: 12,\r\n    //         }\r\n    //     },\r\n    //     MuiButton: {\r\n    //         root: {\r\n    //             borderRadius: 12,\r\n    //         },\r\n    //         sizeLarge: {\r\n    //             padding: '10px 16px',\r\n    //             lineHeight: '20px'\r\n    //         }\r\n    //     },\r\n    //     MuiDivider: {\r\n    //         root: {\r\n    //             background: '#E6E6E6',\r\n    //         }\r\n    //     }\r\n    // }\r\n});","import React from 'react';\r\nimport { ISimulationResult } from '../../Models/SimulationResult';\r\nimport { PageLocation } from '../../shared/enums/PageLocation';\r\n\r\nexport interface IHomeContextProps {\r\n    pageLocation: PageLocation,\r\n    setPageLocation: (pageLocation: PageLocation) => void,\r\n    \r\n    openLoadingDialog: boolean,\r\n    setOpenLoadingDialog: (open: boolean) => void,\r\n\r\n    simulationResult: ISimulationResult | null,\r\n    setSimulationResult: (simulationResult: ISimulationResult | null) => void,\r\n}\r\n\r\nexport const homeContextInitial: IHomeContextProps = {\r\n    pageLocation: PageLocation.INITAL,\r\n    setPageLocation: () => { ''; },\r\n\r\n    openLoadingDialog: false,\r\n    setOpenLoadingDialog: () => { ''; },\r\n\r\n    simulationResult: null,\r\n    setSimulationResult: () => { ''; },\r\n};\r\n\r\nexport const HomeContext = React.createContext(homeContextInitial);\r\n","import React, { ReactChild } from 'react';\r\n\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { HomeContext } from '../HomeContext';\r\n\r\ninterface IHomeItemProps {\r\n    pageLocation?: PageLocation,\r\n    pageLocationList?: PageLocation[],\r\n    children: ReactChild\r\n}\r\n\r\nexport function HomeItem({pageLocation, pageLocationList, children}: IHomeItemProps) {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    return (\r\n        <>\r\n            { !!pageLocation && homeContext.pageLocation === pageLocation && \r\n                children\r\n            }\r\n            { !!pageLocationList && pageLocationList.includes(homeContext.pageLocation) && \r\n                children\r\n            }\r\n        </> \r\n    );\r\n}","import React from 'react';\r\nimport { Grid, Button } from '@mui/material';\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { HomeContext } from '../HomeContext';\r\n\r\nexport function About() {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction='column'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            spacing={2}\r\n            style={{ minHeight: '100vh' }}>\r\n            <Grid item xs={12}>\r\n                <code>Desenvolvimento de um Simulador de Dinâmica Orbital Para Fins Educacionais</code>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <code>Aluno: Alberto Romanhol Moreira</code> \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <code>Orientadora: Maria Cecília Pereira de Paula</code> \r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <code>Universidade Federal de Minas Gerais</code> \r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Button \r\n                    fullWidth\r\n                    variant='outlined' \r\n                    color='primary'\r\n                    size='large'\r\n                    style={{textTransform: 'lowercase', height: '10vh'}}\r\n                    onClick={() => { homeContext.setPageLocation(PageLocation.INITAL); }}>\r\n                    <code>tela inicial</code> \r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { HomeContext } from '../HomeContext';\r\n\r\ninterface IChooseButtonProps {\r\n    label: string;\r\n    pageLocation: PageLocation,\r\n    disabled?: boolean,\r\n}\r\n\r\nexport function Initial() {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    const ChooseButton = ({ label, pageLocation, disabled = false}: IChooseButtonProps) => {\r\n        return (\r\n            <Grid item xs={6}>\r\n                <Button \r\n                    disabled={disabled}\r\n                    fullWidth\r\n                    variant='outlined' \r\n                    color='primary'\r\n                    size='large'\r\n                    style={{ height: '15vh'}}\r\n                    onClick={() => { homeContext.setPageLocation(pageLocation); }}>\r\n                    <code>{label}</code> \r\n                </Button>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    \r\n    const PageHeader = () => {\r\n        return (\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\"><code>Simulador de dinâmica orbital</code></Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ width: '60%', textAlign: 'center'}}>\r\n                    <Typography variant=\"body1\">\r\n                        <code>Olá! Este simulador foi desenvolvido com o intuito de utilizar a Lei da Gravitação Universal para simular o movimento de corpos celestes. Podem ser realizadas, tanto simulações do Sistema Solar (com os planetas desejados), ou bem como, a simulações de manobras orbitais (em breve). <br/> Vamos nessa?</code>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction='column'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            spacing={5}\r\n            style={{ minHeight: '100vh' }}>\r\n\r\n            <PageHeader />\r\n\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">\r\n                    <code>Por qual simulação deseja iniciar?</code>\r\n                </Typography>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid\r\n                    container\r\n                    direction='row'\r\n                    justifyContent='center'\r\n                    alignItems='center'\r\n                    spacing={3}>\r\n                    <ChooseButton \r\n                        label='sistema solar'\r\n                        pageLocation = {PageLocation.SOLAR_SYSTEM} />\r\n                        \r\n                    <ChooseButton \r\n                        disabled\r\n                        label='manobras orbitais'\r\n                        pageLocation = {PageLocation.MANOUVERS} />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Checkbox,\r\n    TextField,\r\n    Chip,\r\n} from '@mui/material';\r\nimport { Autocomplete } from '@mui/lab';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport { IPlanet } from '../../../Models/Planet';\r\n\r\ninterface ISelectPlanetsProps {\r\n    planets: IPlanet[];\r\n    planetsSelected: IPlanet[];\r\n    setPlanetsSelected: (planets: IPlanet[]) => void;\r\n}\r\n\r\nexport function SelectPlanets({ planets, planetsSelected, setPlanetsSelected }: ISelectPlanetsProps) {\r\n    const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\n    const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n    React.useEffect(() => {\r\n        if (planets.length > 0) {\r\n            setSunSelected();\r\n        }\r\n    }, [planets]);\r\n\r\n    const setSunSelected = () => {\r\n        const listPlanetsSelected = [...planetsSelected];\r\n        \r\n        if (listPlanetsSelected.findIndex((p) => p.name === 'Sun') === -1) {\r\n            const sun = planets.find((p) => p.name === 'Sun');\r\n    \r\n            if (sun) listPlanetsSelected.push(sun);\r\n        \r\n            setPlanetsSelected(listPlanetsSelected);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} style={{ width: '100%' }}>\r\n            <Autocomplete\r\n                multiple\r\n                fullWidth\r\n                options={planets}\r\n                value={planetsSelected}\r\n                onChange={(_, newValue) => {\r\n                    const sun = planets.find((p) => p.name === 'Sun');\r\n\r\n                    const sunList = sun ? [sun] : [];\r\n\r\n                    setPlanetsSelected([\r\n                        ...sunList,\r\n                        ...newValue.filter((p) => p.name !== 'Sun'),\r\n                    ]);\r\n                }}\r\n                getOptionLabel={(option) => option.namePTBR}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{ marginRight: 8 }}\r\n                            checked={selected}\r\n                            disabled={option.name === 'Sun'}\r\n                        />\r\n                        {option.namePTBR}\r\n                    </li>\r\n                )}\r\n                renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                        <Chip\r\n                            {...getTagProps({ index })}\r\n                            key={`${option.name}-${index}`}\r\n                            label={option.namePTBR}\r\n                            disabled={option.name === 'Sun'}\r\n                        />\r\n                    ))\r\n                }\r\n                renderInput={(params) => <TextField {...params} label=\"Corpos Celestes\" />}\r\n            />\r\n        </Grid>\r\n    );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport axios from 'axios';\r\n\r\nexport default (route: string) => {\r\n    \r\n    const create = (data: any) => axios.post(`/${route}`, data);\r\n    const update = (data: any) => axios.put(`/${route}/${data.id}`, data);\r\n    const getAll = () => axios.get(`/${route}`);    \r\n    const get = (id: number) => axios.get(`/${route}/${id}`);\r\n    const remove = (id: number) => axios.delete(`/${route}/${id}`);\r\n    \r\n    return {\r\n        create,\r\n        update,\r\n        getAll,\r\n        get,\r\n        remove\r\n    };\r\n};","import baseService from '../shared/baseService';\r\n\r\nconst planets = () => baseService('planets');\r\nconst planetsEphemerities = () => baseService('planets/ephemerites');\r\n\r\nexport default {\r\n    planets,\r\n    planetsEphemerities\r\n};","import React from 'react';\r\n\r\nimport { Grid, Typography } from '@mui/material';\r\n\r\nexport function PageHeader() {\r\n    return (\r\n        <Grid\r\n            item\r\n            xs={12}\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\"><code>Simulador do sistema solar</code></Typography>\r\n            </Grid>\r\n            <Grid item xs={12} style={{ width: '60%', textAlign: 'center'}}>\r\n                <Typography variant=\"body1\">\r\n                    <code>Selecione quais planetas deseja simular, sendo o corpo de refêrencia o sol. Também é possível configurar a data de início da simulação e por quanto tempo será realizado a simulação.</code>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { TextField, TextFieldProps } from '@mui/material';\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\n\r\ninterface IDateCalendarProps {\r\n    label: string\r\n    dateTime: Date | null,\r\n    setDateTime: (date: Date | null) => void,\r\n}\r\n\r\nexport function DateCalendar({\r\n    label,\r\n    dateTime,\r\n    setDateTime,\r\n}: IDateCalendarProps) {\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={ptBR}>\r\n            <DatePicker\r\n                label={label}\r\n                value={dateTime}\r\n                onChange={(newValue) => {\r\n                    setDateTime(newValue);\r\n                }}\r\n                disableFuture\r\n                renderInput={(params: JSX.IntrinsicAttributes & TextFieldProps) => <TextField fullWidth {...params} />}\r\n            />\r\n        </LocalizationProvider>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n} from '@mui/material';\r\nimport { DateCalendar } from '../../../shared/Components/DateCalendar';\r\n\r\ninterface IInitialDateProps {\r\n    dateValue: Date | null;\r\n    setDateValue: (date: Date | null) => void;\r\n}\r\nexport function InitialDate({ dateValue, setDateValue }: IInitialDateProps) {\r\n    return (\r\n        <Grid item xs={6} style={{ width: '100%' }}>\r\n            <DateCalendar\r\n                label='Data de Início'\r\n                dateTime={dateValue} \r\n                setDateTime={setDateValue} />\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n} from '@mui/material';\r\n\r\ninterface ISimulationDaysProps {\r\n    simulationDays: number;\r\n    setSimulationDays: (days: number) => void; \r\n}\r\n\r\nexport function SimulationDays({ simulationDays, setSimulationDays }: ISimulationDaysProps) {\r\n    return (\r\n        <Grid item xs={6} style={{ width: '100%' }}>\r\n            <TextField\r\n                label=\"Dias de Simulação\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                fullWidth\r\n                value={simulationDays}\r\n                onChange={(e) => {\r\n                    setSimulationDays(Number(e.target.value));\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    );\r\n}\r\n","import baseService from '../shared/baseService';\r\n\r\nconst simulation = () => baseService('simulations');\r\n\r\nexport default {\r\n    simulation,\r\n};","import React from 'react';\r\n\r\nimport { Button, Grid, LinearProgress } from '@mui/material';\r\nimport { SelectPlanets } from '../Components/SelectPlanets';\r\nimport PlanetService from '../../../Services/PlanetService';\r\nimport { IPlanet } from '../../../Models/Planet';\r\nimport { PageHeader } from '../Components/PageHeader';\r\nimport { InitialDate } from '../Components/InitialDate';\r\nimport { SimulationDays } from '../Components/SimulationDays';\r\nimport { ISimulationConfig } from '../../../Models/SimulationConfig';\r\nimport SimulationService from '../../../Services/SimulationService';\r\nimport { HomeContext } from '../../Home/HomeContext';\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\n\r\nexport function SolarSystem() {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    const [loading, setLoading] = React.useState<boolean>(false);\r\n\r\n    const [planets, setPlanets] = React.useState<IPlanet[]>([]);\r\n    const [planetsSelected, setPlanetsSelected] = React.useState<IPlanet[]>([]);\r\n    const [dateValue, setDateValue] = React.useState<Date | null>(new Date());\r\n    const [simulationDays, setSimulationDays] = React.useState<number>(365);\r\n\r\n    React.useEffect(() => {\r\n        if (planets.length === 0) {\r\n            fetchPlanets();\r\n        }\r\n    }, []);\r\n    \r\n    const fetchPlanets = () => {\r\n        setLoading(true);\r\n\r\n        PlanetService.planets()\r\n            .getAll()\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    setPlanets(response.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert('fail');\r\n            })\r\n            .finally(() => { setLoading(false); });\r\n    };\r\n\r\n    const startSimulation = () => {\r\n        const simulationConfig = {\r\n            planets: planetsSelected,\r\n            initialDay: dateValue,\r\n            simulationDays: simulationDays,\r\n        } as ISimulationConfig;\r\n\r\n        homeContext.setOpenLoadingDialog(true);\r\n        SimulationService\r\n            .simulation()\r\n            .create(simulationConfig)\r\n            .then((response) => {\r\n                homeContext.setSimulationResult(response.data);\r\n                homeContext.setPageLocation(PageLocation.SIMULATION_RESULT);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert('fail');\r\n            })\r\n            .finally(() => {  homeContext.setOpenLoadingDialog(false); });\r\n    };\r\n\r\n    const SimulationButton = () => (\r\n        <Grid item xs={12}>\r\n            <Button\r\n                fullWidth\r\n                size=\"large\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={startSimulation}\r\n                style={{ height: '7vh' }}>\r\n                    SIMULAR\r\n            </Button>\r\n        </Grid>\r\n    );\r\n\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction='column'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            spacing={5}\r\n            style={{ minHeight: '100vh' }}>\r\n\r\n            <PageHeader />\r\n            \r\n            {loading && (\r\n                <Grid item xs={12} style={{ width: '50%' }}>\r\n                    <LinearProgress color=\"primary\" />\r\n                </Grid>\r\n            )}\r\n\r\n            {!loading && (\r\n                <Grid item xs={12} style={{ width: '50%' }}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}>\r\n                        <SelectPlanets \r\n                            planets={planets}\r\n                            planetsSelected={planetsSelected}\r\n                            setPlanetsSelected={setPlanetsSelected} />\r\n                        <InitialDate\r\n                            dateValue={dateValue}\r\n                            setDateValue={setDateValue} />\r\n                        <SimulationDays\r\n                            simulationDays={simulationDays}\r\n                            setSimulationDays={setSimulationDays} />\r\n                        <SimulationButton />\r\n\r\n                    </Grid>\r\n                   \r\n                </Grid>\r\n            )}\r\n\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Grid, Typography, Button, Paper, Divider } from '@mui/material';\r\nimport { themeConfiguration } from '../../../themeConfiguration';\r\n\r\ninterface IPlotConfig {\r\n  tridimensionalPlot: boolean;\r\n  setTridimensionalPlot: (value: boolean) => void;\r\n}\r\n\r\nexport function PlotConfig({\r\n    tridimensionalPlot,\r\n    setTridimensionalPlot,\r\n}: IPlotConfig) {\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding: themeConfiguration.spacing(3),\r\n                width: '100%',\r\n                marginRight: themeConfiguration.spacing(3),\r\n            }}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography >\r\n                        <code>Configurações</code>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ width: '100%'}}>\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant='subtitle2'>\r\n                        <code>Tipo de gráfico</code>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={2}\r\n                    >\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                variant={tridimensionalPlot ? 'contained' : 'outlined'}\r\n                                color=\"primary\"\r\n                                onClick={() => setTridimensionalPlot(true)}\r\n                                style={{ minWidth: '36px'}}\r\n                            >\r\n                                <Typography>\r\n                                    <code>3D</code>\r\n                                </Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                variant={!tridimensionalPlot ? 'contained' : 'outlined'}\r\n                                color=\"primary\"\r\n                                onClick={() => setTridimensionalPlot(false)}\r\n                                style={{ minWidth: '36px'}}\r\n                            >\r\n                                <Typography>\r\n                                    <code>2D</code>\r\n                                </Typography>\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ width: '100%'}}>\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        variant='outlined'\r\n                        color=\"primary\"\r\n                        disabled\r\n                        onClick={() => setTridimensionalPlot(true)}\r\n                    >\r\n                        <Typography variant='overline'>\r\n                            <code>EXPORTAR CSV</code>\r\n                        </Typography>\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(\r\n        getWindowDimensions()\r\n    );\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport { Data } from 'plotly.js';\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport { IPlanet } from '../../../Models/Planet';\r\nimport { IPlotData } from '../Models/PlotData';\r\nimport { PlotConfig } from './PlotConfig';\r\nimport useWindowDimensions from '../../../shared/operators';\r\n\r\ninterface IPlotResultProps {\r\n  planets: IPlanet[];\r\n}\r\n\r\n\r\nexport function PlotResult({ planets }: IPlotResultProps) { \r\n    \r\n    const [plotData, setPlotData] = React.useState<IPlotData[]>([]);\r\n    const [tridimensionalPlot, setTridimensionalPlot] = React.useState<boolean>(false);\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    React.useEffect(() => { \r\n        setPlanetsData();\r\n    }, [planets, tridimensionalPlot]);\r\n\r\n    const setPlanetsData = () => {\r\n        const data = planets.map(planet => getPlanetData(planet));\r\n        setPlotData(data);\r\n    };\r\n\r\n    const getPlanetData = (planet: IPlanet) => {\r\n        const data : IPlotData = {\r\n            x: planet.bodyTrajectory.x,\r\n            y: planet.bodyTrajectory.y,\r\n            name: planet.namePTBR,\r\n            mode: 'lines',\r\n        };\r\n\r\n        if (tridimensionalPlot) {\r\n            data.z = planet.bodyTrajectory.z;\r\n            data.type = 'scatter3d';\r\n        }\r\n\r\n        return (data);\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            item xs={12}\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            style={{ width: '100%'}}>\r\n            <Grid item xs={12} sm={2}>\r\n                <PlotConfig \r\n                    tridimensionalPlot={tridimensionalPlot}\r\n                    setTridimensionalPlot={setTridimensionalPlot} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={10}>\r\n                <Plot\r\n                    data={plotData as Data[]}\r\n                    layout={{ title: 'Sistema Solar',\r\n                        autosize: false,\r\n                        width: 0.7 * width,\r\n                        height: 0.8 * height,\r\n                        hovermode: 'closest',\r\n                        dragmode: 'pan',\r\n                        xaxis: {\r\n                            scaleratio: 1,\r\n                            title: {\r\n                                text: 'X [km]',\r\n                            },\r\n                        },\r\n                        yaxis: {\r\n                            scaleratio: 1,\r\n                            scaleanchor: 'x',\r\n                            title: {\r\n                                text: 'Y [km]',\r\n                            },\r\n                        },\r\n                    }}\r\n                    style={{\r\n                        margin: 'auto',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                    config={{\r\n                        // responsive: true,\r\n                        displaylogo: false,\r\n                        // modeBarButtonsToRemove: ['resetCameraLastSave3d']\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Grid, Typography } from '@mui/material';\r\nimport { themeConfiguration } from '../../../themeConfiguration';\r\nimport { HomeContext } from '../../Home/HomeContext';\r\nimport { PlotResult } from '../Components/PlotResult';\r\n\r\n\r\nexport function SimulationResult() {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    const hasResult = homeContext.simulationResult && homeContext.simulationResult?.planets.length > 0;\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n            style={{ \r\n                margin: themeConfiguration.spacing(1), \r\n                width: '100%',\r\n                minHeight: '95vh'\r\n            }}>\r\n            {hasResult ? \r\n                (homeContext.simulationResult && homeContext.simulationResult?.planets.length > 0 && (\r\n                    <Grid item xs={12}>\r\n                        <PlotResult planets={homeContext.simulationResult?.planets} />\r\n                    </Grid>\r\n                ))\r\n                :\r\n                (\r\n                    <Typography variant=\"h5\" color=\"textPrimary\">\r\n                        Nenhum resultado encontrado.\r\n                    </Typography>\r\n                )\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/SolarSystem.4a6c8bba.svg\";","import React from 'react';\r\nimport { Grid, IconButton } from '@mui/material';\r\n\r\nimport SolarSystem from '../../../assets/SolarSystem.svg';\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { themeConfiguration } from '../../../themeConfiguration';\r\nimport { HomeContext } from '../../Home/HomeContext';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\ninterface IDrawerHeader {\r\n    setOpened: (opened: boolean) => void;\r\n}\r\n\r\nexport function DrawerHeader ({ setOpened }: IDrawerHeader) {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} style={{\r\n                textAlign: 'end',\r\n                margin: themeConfiguration.spacing(1),\r\n            }}>\r\n                <IconButton \r\n                    style={{ borderRadius: '16px' }}\r\n                    onClick={ () => setOpened(false) }>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid item xs={12} style={{\r\n                textAlign: 'center',\r\n                marginBottom: themeConfiguration.spacing(2),\r\n            }}>\r\n                <IconButton \r\n                    style={{ borderRadius: '16px' }}\r\n                    onClick={ () => homeContext.setPageLocation(PageLocation.INITAL) }>\r\n                    <img \r\n                        height='44px'\r\n                        src={SolarSystem} \r\n                        alt='Solar System' \r\n                    />\r\n                </IconButton>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { List } from '@mui/material';\r\n\r\ninterface IListComponentProps {\r\n    children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport function ListComponent({ children }: IListComponentProps) {\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            style={{\r\n                width: '100%',\r\n                maxWidth: 360,\r\n                padding: 0\r\n            }}>\r\n            {children}\r\n        </List>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Typography,\r\n    ListItem,\r\n    Grid,\r\n} from '@mui/material';\r\n\r\nimport { HomeContext } from '../../Home/HomeContext';\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { themeConfiguration } from '../../../themeConfiguration';\r\n\r\ninterface IMenuItemProps {\r\n  menuTitle: string;\r\n  pageLocation: PageLocation;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport function MenuItemComponent({\r\n    menuTitle,\r\n    pageLocation,\r\n    disabled = false,\r\n}: IMenuItemProps) {\r\n    const homeContext = React.useContext(HomeContext);\r\n\r\n    const [backgroundColor, setBackgroundColor] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        changeBackgroundColor();\r\n    }, [homeContext.pageLocation]);\r\n    \r\n    const changeBackgroundColor = (color?: string) => {\r\n        if (homeContext.pageLocation === pageLocation) {\r\n            setBackgroundColor(themeConfiguration.palette.primary.main);\r\n            return;\r\n        }\r\n\r\n        if (color) {\r\n            setBackgroundColor(color);\r\n            return;\r\n        }\r\n\r\n        setBackgroundColor('');\r\n    };\r\n\r\n    const getMenuTitle = () => {\r\n        return (\r\n            <Typography variant=\"subtitle1\" style={{\r\n                verticalAlign: 'middle',\r\n            }}>\r\n                {menuTitle}\r\n            </Typography>\r\n        );\r\n    };\r\n\r\n    const principalMenuItem = () => {\r\n        return (\r\n            <ListItem \r\n                button \r\n                disabled={disabled}\r\n                style={{\r\n                    height: themeConfiguration.spacing(6),\r\n                }}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyItems=\"flex-start\"\r\n                    alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        {getMenuTitle()}\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItem>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: backgroundColor,\r\n            }}\r\n            onClick={() => { \r\n                homeContext.setPageLocation(pageLocation);\r\n            }}\r\n            onMouseOver={() => {\r\n                changeBackgroundColor(themeConfiguration.palette.primary.light);\r\n            }}\r\n            onMouseLeave={() => { changeBackgroundColor(); }}>\r\n            {principalMenuItem()}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material';\r\n\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { ListComponent } from './ListComponent';\r\nimport { MenuItemComponent } from './MenuItemComponent';\r\n\r\nexport function DrawerItensList() {\r\n    return (\r\n        <Grid\r\n            container\r\n            direction='column'\r\n            alignItems='center'\r\n            style={{\r\n                maxHeight: '45vh',\r\n                overflowY: 'auto',\r\n            }}>\r\n            <ListComponent>\r\n                <>\r\n                    <MenuItemComponent\r\n                        pageLocation={PageLocation.SOLAR_SYSTEM}\r\n                        menuTitle='Sistema Solar'\r\n                    />\r\n                    <MenuItemComponent\r\n                        disabled\r\n                        pageLocation={PageLocation.MANOUVERS}\r\n                        menuTitle='Manobras'\r\n                    />\r\n\r\n                </>\r\n            </ListComponent>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { Grid } from '@mui/material';\r\n\r\nimport { PageLocation } from '../../../shared/enums/PageLocation';\r\nimport { ListComponent } from './ListComponent';\r\nimport { MenuItemComponent } from './MenuItemComponent';\r\n\r\nexport function DrawerConfiguration () {\r\n    return (\r\n        <Grid\r\n            container\r\n            direction='column'\r\n            justifyItems='center'\r\n            alignItems='center'>\r\n            <ListComponent>\r\n                <>\r\n                    <MenuItemComponent\r\n                        pageLocation={PageLocation.ABOUT}\r\n                        menuTitle='Sobre'\r\n                    />\r\n                </>\r\n            </ListComponent>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Drawer, Grid, Divider } from '@mui/material';\r\nimport { DrawerHeader } from '../Components/DrawerHeader';\r\nimport { DrawerItensList } from '../Components/DrawerItensList';\r\nimport { DrawerConfiguration } from '../Components/DrawerConfiguration';\r\nimport { themeConfiguration } from '../../../themeConfiguration';\r\n\r\ninterface ISidebarProps {\r\n    opened: boolean;\r\n    setOpened: (opened: boolean) => void;\r\n}\r\n\r\nexport function Sidebar({ opened, setOpened }: ISidebarProps) {\r\n    return (\r\n        <Drawer\r\n            anchor='left'\r\n            variant='persistent'\r\n            PaperProps={{ elevation: 3 }}\r\n            open={opened}>\r\n            <Grid \r\n                container\r\n                direction='column'\r\n                justifyContent='space-between'\r\n                alignItems='stretch'\r\n                style={{\r\n                    height: '100vh',\r\n                    overflow: 'hidden',\r\n                    width: themeConfiguration.spacing(25),\r\n                }}>\r\n                <Grid item>\r\n                    <DrawerHeader setOpened={setOpened}/>\r\n                    <DrawerItensList />\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item>\r\n                    <DrawerConfiguration />\r\n                </Grid>\r\n            </Grid>\r\n        </Drawer>\r\n    );\r\n}","import React from 'react';\r\nimport { Dialog, CircularProgress } from '@mui/material';\r\nimport { themeConfiguration } from '../../themeConfiguration';\r\n\r\ninterface ILoadingDialogProps {\r\n    open: boolean\r\n}\r\n  \r\nexport function LoadingDialog({open}: ILoadingDialogProps) {\r\n  \r\n    return (\r\n        <Dialog \r\n            aria-labelledby=\"loading-dialog-title\" \r\n            open={open} \r\n            PaperProps={{\r\n                style: {\r\n                    backgroundColor: 'transparent',\r\n                    background: 'transparent',\r\n                    boxShadow: 'none',\r\n                },\r\n            }}>\r\n            <CircularProgress \r\n                size=\"124px\" \r\n                style={{\r\n                    margin: themeConfiguration.spacing(4),\r\n                    textAlign: 'center',\r\n                    color: themeConfiguration.palette.primary.light\r\n                }}\r\n            />  \r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { PageLocation } from '../../shared/enums/PageLocation';\r\nimport { HomeItem } from './Components/HomeItem';\r\nimport { About } from './Components/About';\r\nimport { HomeContext } from './HomeContext';\r\nimport { Initial } from './Components/Initial';\r\nimport { SolarSystem } from '../SolarSystem/View/SolarSystem';\r\nimport { SimulationResult } from '../SimulationResult/View/SimulationResult';\r\nimport { Sidebar } from '../Sidebar/View/Sidebar';\r\nimport { themeConfiguration } from '../../themeConfiguration';\r\nimport { ISimulationResult } from '../../Models/SimulationResult';\r\nimport { IconButton } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { LoadingDialog } from '../../shared/Components/LoadingDialog';\r\n\r\n\r\nexport function Home() {\r\n    const [openDrawer, setOpenDrawer] = React.useState<boolean>(true);\r\n    const [openLoadingDialog, setOpenLoadingDialog] = React.useState<boolean>(false);\r\n\r\n    const [pageLocation, setPageLocation] = React.useState<PageLocation>(PageLocation.INITAL);\r\n    const [simulationResult, setSimulationResult] = React.useState<ISimulationResult | null>(null);\r\n\r\n    React.useEffect(() => { \r\n        if (openDrawer && pageLocation !== PageLocation.SIMULATION_RESULT)\r\n            return;\r\n        \r\n        if ((openDrawer && pageLocation === PageLocation.SIMULATION_RESULT) \r\n         || (!openDrawer && pageLocation !== PageLocation.SIMULATION_RESULT))\r\n            setOpenDrawer(pageLocation !== PageLocation.SIMULATION_RESULT);\r\n    }, [pageLocation]);\r\n    \r\n    return (\r\n        <div style={{\r\n            flexGrow: 1,\r\n            overflow: 'hidden',\r\n        }}>\r\n            <HomeContext.Provider value={{\r\n                pageLocation, setPageLocation,\r\n                simulationResult, setSimulationResult,\r\n                openLoadingDialog, setOpenLoadingDialog\r\n            }}>\r\n                {!openDrawer && (\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"end\"\r\n                        style={{\r\n                            margin: themeConfiguration.spacing(1),\r\n                            position: 'fixed',\r\n                        }}\r\n                        onClick={() => {setOpenDrawer(true);}}>\r\n                        <MenuIcon />\r\n                    </IconButton>)}\r\n                <Sidebar opened={openDrawer} setOpened={setOpenDrawer} />\r\n                <div style={{\r\n                    marginLeft: (openDrawer ? themeConfiguration.spacing(25) : 0),\r\n                }}>\r\n                    <HomeItem pageLocation={PageLocation.INITAL}>\r\n                        <Initial />\r\n                    </HomeItem>\r\n                \r\n                    <HomeItem pageLocation={PageLocation.SOLAR_SYSTEM}>\r\n                        <SolarSystem />\r\n                    </HomeItem>\r\n\r\n                    <HomeItem pageLocation={PageLocation.SIMULATION_RESULT}>\r\n                        <SimulationResult />\r\n                    </HomeItem>\r\n\r\n                    <HomeItem pageLocation={PageLocation.ABOUT}>\r\n                        <About />\r\n                    </HomeItem>\r\n                </div>\r\n                <LoadingDialog open={openLoadingDialog}/>\r\n            </HomeContext.Provider>\r\n        </div>\r\n    );\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Home } from './Feature/Home/Home';\r\n\r\nexport function Routes() {\r\n\r\n    function PrivateRoute({ children, ...rest }: any) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={() =>\r\n                    children\r\n                }\r\n            />       \r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Router>\r\n            <Switch>                 \r\n                <PrivateRoute exact path=\"/\">\r\n                    <Home />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"*\">\r\n                    <Home />\r\n                </PrivateRoute>\r\n            </Switch>                \r\n        </Router>        \r\n    );\r\n}","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_URL_BACK;\r\n\r\nexport default function AxiosSetting() {  \r\n    return (null);\r\n}\r\n","import React from 'react';\r\n\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\n\r\nimport { themeConfiguration } from './themeConfiguration';\r\nimport { Routes } from './Routes';\r\nimport AxiosSetting from './shared/AxiosSettings';\r\n \r\nexport default function App() {     \r\n    return (        \r\n        <ThemeProvider theme={themeConfiguration}>   \r\n            <CssBaseline /> \r\n            <AxiosSetting/>\r\n            <Routes/>\r\n        </ThemeProvider>       \r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}